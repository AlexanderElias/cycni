/*
	@preserve
	title: cycni
	version: 1.1.7
	license: mpl-2.0
	author: alexander elias
*/
(function(a,b){'object'==typeof exports&&'undefined'!=typeof module?module.exports=b():'function'==typeof define&&define.amd?define('Cycni',b):a.Cycni=b()})(this,function(){'use strict';return{SET:2,clone:function(b){var d;if(null===b||b===void 0||'object'!=typeof b)return b;if('Date'===b.constructor.name)d=new Date,d.setTime(b.getTime());else if('Array'===b.constructor.name){d=[];for(var f=0,g=b.length;f<g;f++)d[f]=this.clone(b[f])}else if('Object'===b.constructor.name)for(var h in d={},b)b.hasOwnProperty(h)&&(d[h]=this.clone(b[h]));else throw new Error('Unable to clone variable. Type is not supported');return d},paths:function(b){return b.split('.')},traverse:function(b,d,f,g){d='number'==typeof d?d.toString():d,d='string'==typeof d?this.paths(d):d;var h,j=0,m=d.length,n=0===m?0:m-1;for(j;j<m;j++){if(h=d[j],!(h in b))if(g===this.SET)b[h]=isNaN(d[j+1])?{}:[];else return f.call(this,b,h,!1);if(j==n)return f.call(this,b,h,!0);b=b[h]}},set:function(b,d,f){return this.traverse(b,d,function(g,h){return g[h]=f},this.SET)},get:function(b,d){return this.traverse(b,d,function(f,g){return f[g]})},has:function(b,d,f){return this.traverse(b,d,function(g,h,j){return!1!==j&&('Function'===f.constructor.name?f(g[h])||!1:'RegExp'===f.constructor.name?f.test(g[h]):g[h]===f)})},remove:function(b,d){return this.traverse(b,d,function(f,g){'Object'===f.constructor.name?delete f[g]:'Array'===f.constructor.name&&f.splice(g,1)})}}});